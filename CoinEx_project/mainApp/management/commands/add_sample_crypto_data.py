# your_app/management/commands/add_sample_crypto_data.py

from datetime import datetime
from django.core.management.base import BaseCommand
from mainApp.models import Cryptocurrency

class Command(BaseCommand):
    help = 'Adds sample data to the Cryptocurrency model'

    def handle(self, *args, **kwargs):
        cryptocurrency_data = [
            {'name': 'Bitcoin', 'symbol': 'BTC', 'price': 50000.00, 'one_hour_change': 2.5, 'one_hour_flag': 1,
             'twenty_four_hour_change': 5.0, 'twenty_four_hour_flag': 1, 'market_cap': 900000000000,
             'volume': 800000000, 'launch_date': datetime(2009, 1, 3)},
            {'name': 'Ethereum', 'symbol': 'ETH', 'price': 3000.00, 'one_hour_change': -1.8, 'one_hour_flag': 0,
             'twenty_four_hour_change': 3.2, 'twenty_four_hour_flag': 1, 'market_cap': 400000000000, 'volume': 30000000,
             'launch_date': datetime(2015, 7, 30)},
            {'name': 'Binance Coin', 'symbol': 'BNB', 'price': 400.00, 'one_hour_change': 1.2, 'one_hour_flag': 1,
             'twenty_four_hour_change': 7.5, 'twenty_four_hour_flag': 1, 'market_cap': 80000000000, 'volume': 5000000,
             'launch_date': datetime(2017, 7, 25)},
            {'name': 'Cardano', 'symbol': 'ADA', 'price': 2.00, 'one_hour_change': 0.5, 'one_hour_flag': 1,
             'twenty_four_hour_change': 4.0, 'twenty_four_hour_flag': 1, 'market_cap': 60000000000, 'volume': 2000000,
             'launch_date': datetime(2017, 9, 29)},
            {'name': 'Solana', 'symbol': 'SOL', 'price': 150.00, 'one_hour_change': 3.0, 'one_hour_flag': 1,
             'twenty_four_hour_change': 8.2, 'twenty_four_hour_flag': 1, 'market_cap': 70000000000, 'volume': 4000000,
             'launch_date': datetime(2020, 3, 20)},
            {'name': 'Polkadot', 'symbol': 'DOT', 'price': 30.00, 'one_hour_change': -0.7, 'one_hour_flag': 0,
             'twenty_four_hour_change': 2.8, 'twenty_four_hour_flag': 1, 'market_cap': 35000000000, 'volume': 1500000,
             'launch_date': datetime(2020, 5, 26)},
            {'name': 'Ripple', 'symbol': 'XRP', 'price': 1.50, 'one_hour_change': 1.8, 'one_hour_flag': 1,
             'twenty_four_hour_change': 6.5, 'twenty_four_hour_flag': 1, 'market_cap': 30000000000, 'volume': 1000000,
             'launch_date': datetime(2012, 8, 7)},
            {'name': 'Dogecoin', 'symbol': 'DOGE', 'price': 0.30, 'one_hour_change': -0.5, 'one_hour_flag': 0,
             'twenty_four_hour_change': 1.5, 'twenty_four_hour_flag': 1, 'market_cap': 10000000000, 'volume': 500000,
             'launch_date': datetime(2013, 12, 6)},
            {'name': 'Avalanche', 'symbol': 'AVAX', 'price': 50.00, 'one_hour_change': 2.0, 'one_hour_flag': 1,
             'twenty_four_hour_change': 5.8, 'twenty_four_hour_flag': 1, 'market_cap': 12000000000, 'volume': 800000,
             'launch_date': datetime(2020, 9, 21)},
            {'name': 'Chainlink', 'symbol': 'LINK', 'price': 25.00, 'one_hour_change': -1.2, 'one_hour_flag': 0,
             'twenty_four_hour_change': 3.7, 'twenty_four_hour_flag': 1, 'market_cap': 18000000000, 'volume': 700000,
             'launch_date': datetime(2017, 9, 19)},
            {'name': 'CryptoX', 'symbol': 'CRX', 'price': 100.00, 'one_hour_change': 1.0, 'one_hour_flag': 1,
             'twenty_four_hour_change': 3.0, 'twenty_four_hour_flag': 1, 'market_cap': 20000000000, 'volume': 1000000,
             'launch_date': datetime(2022, 2, 15)},
            {'name': 'DigitalCoin', 'symbol': 'DGC', 'price': 50.00, 'one_hour_change': -0.5, 'one_hour_flag': 0,
             'twenty_four_hour_change': 1.5, 'twenty_four_hour_flag': 1, 'market_cap': 8000000000, 'volume': 500000,
             'launch_date': datetime(2022, 6, 10)},
            {'name': 'BitToken', 'symbol': 'BTK', 'price': 20.00, 'one_hour_change': 0.2, 'one_hour_flag': 1,
             'twenty_four_hour_change': 2.0, 'twenty_four_hour_flag': 1, 'market_cap': 5000000000, 'volume': 300000,
             'launch_date': datetime(2022, 9, 5)},
            {'name': 'EtherLite', 'symbol': 'ETL', 'price': 10.00, 'one_hour_change': 0.8, 'one_hour_flag': 1,
             'twenty_four_hour_change': 2.5, 'twenty_four_hour_flag': 1, 'market_cap': 3000000000, 'volume': 200000,
             'launch_date': datetime(2022, 12, 20)},
            {'name': 'CoinWave', 'symbol': 'CWX', 'price': 75.00, 'one_hour_change': -0.3, 'one_hour_flag': 0,
             'twenty_four_hour_change': 1.8, 'twenty_four_hour_flag': 1, 'market_cap': 10000000000, 'volume': 700000,
             'launch_date': datetime(2023, 3, 8)},
            {'name': 'TokenFlow', 'symbol': 'TFX', 'price': 30.00, 'one_hour_change': 1.5, 'one_hour_flag': 1,
             'twenty_four_hour_change': 4.0, 'twenty_four_hour_flag': 1, 'market_cap': 1500000000, 'volume': 100000,
             'launch_date': datetime(2023, 6, 15)},
            {'name': 'DigitalGold', 'symbol': 'DGLD', 'price': 65.00, 'one_hour_change': -1.0, 'one_hour_flag': 0,
             'twenty_four_hour_change': 2.2, 'twenty_four_hour_flag': 1, 'market_cap': 6000000000, 'volume': 400000,
             'launch_date': datetime(2023, 9, 1)},
            {'name': 'SafeCoin', 'symbol': 'SFC', 'price': 5.00, 'one_hour_change': 0.5, 'one_hour_flag': 1,
             'twenty_four_hour_change': 1.0, 'twenty_four_hour_flag': 1, 'market_cap': 200000000, 'volume': 20000,
             'launch_date': datetime(2023, 11, 10)},
            {'name': 'OldCoin', 'symbol': 'OLC', 'price': 5.00, 'one_hour_change': 0.2, 'one_hour_flag': 1,
             'twenty_four_hour_change': 1.5, 'twenty_four_hour_flag': 1, 'market_cap': 50000000, 'volume': 3000,
             'launch_date': datetime(2018, 3, 12)},
            {'name': 'VintageToken', 'symbol': 'VTK', 'price': 8.00, 'one_hour_change': -0.5, 'one_hour_flag': 0,
             'twenty_four_hour_change': 1.0, 'twenty_four_hour_flag': 1, 'market_cap': 20000000, 'volume': 1000,
             'launch_date': datetime(2016, 5, 18)},
            {'name': 'RetroCash', 'symbol': 'RTC', 'price': 2.00, 'one_hour_change': 0.8, 'one_hour_flag': 1,
             'twenty_four_hour_change': 2.5, 'twenty_four_hour_flag': 1, 'market_cap': 10000000, 'volume': 500,
             'launch_date': datetime(2014, 8, 7)},
            {'name': 'AncientDollar', 'symbol': 'AND', 'price': 1.00, 'one_hour_change': 0.1, 'one_hour_flag': 1,
             'twenty_four_hour_change': 0.5, 'twenty_four_hour_flag': 1, 'market_cap': 5000000, 'volume': 200,
             'launch_date': datetime(2012, 1, 20)},
            {'name': 'AntiqueCoin', 'symbol': 'ATC', 'price': 10.00, 'one_hour_change': -0.3, 'one_hour_flag': 0,
             'twenty_four_hour_change': 1.8, 'twenty_four_hour_flag': 1, 'market_cap': 8000000, 'volume': 1000,
             'launch_date': datetime(2010, 6, 5)},
            {'name': 'CoinWave', 'symbol': 'CWX', 'price': 75.00, 'one_hour_change': -0.3, 'one_hour_flag': 0,
             'twenty_four_hour_change': 1.8, 'twenty_four_hour_flag': 1, 'market_cap': 10000000000, 'volume': 700000,
             'launch_date': datetime(2023, 3, 8)},
            {'name': 'TokenFlow', 'symbol': 'TFX', 'price': 30.00, 'one_hour_change': 1.5, 'one_hour_flag': 1,
             'twenty_four_hour_change': 4.0, 'twenty_four_hour_flag': 1, 'market_cap': 1500000000, 'volume': 100000,
             'launch_date': datetime(2023, 6, 15)},
            {'name': 'DigitalGold', 'symbol': 'DGLD', 'price': 65.00, 'one_hour_change': -1.0, 'one_hour_flag': 0,
             'twenty_four_hour_change': 2.2, 'twenty_four_hour_flag': 1, 'market_cap': 6000000000, 'volume': 400000,
             'launch_date': datetime(2023, 9, 1)},
            {'name': 'SafeCoin', 'symbol': 'SFC', 'price': 5.00, 'one_hour_change': 0.5, 'one_hour_flag': 1,
             'twenty_four_hour_change': 1.0, 'twenty_four_hour_flag': 1, 'market_cap': 200000000, 'volume': 20000,
             'launch_date': datetime(2023, 12, 10)},
            {'name': 'DigitalSilver', 'symbol': 'DSLVR', 'price': 25.00, 'one_hour_change': 1.2, 'one_hour_flag': 1,
             'twenty_four_hour_change': 3.5, 'twenty_four_hour_flag': 1, 'market_cap': 1200000000, 'volume': 80000,
             'launch_date': datetime(2023, 12, 20)},
            ]

        for data in cryptocurrency_data:
            Cryptocurrency.objects.create(**data)

        self.stdout.write(self.style.SUCCESS('Sample data added successfully.'))
